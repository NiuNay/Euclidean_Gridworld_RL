seed: 0

training:
    num_steps: 60000
    model: q_learning

    behaviour: epsilon_greedy
    target: greedy
    test_epsilon: 0.99

    train_run_trigger_states: 
        - [7, 12]
        # - [7, 11]
        # - [7, 13]
        - [7, 12]
        # - [7, 11]
        # - [7, 13]
        # - [8, 11]
        # - [8, 12]
        # - [8, 13]
        # - [6, 11]
        # - [6, 12]
        # - [6, 13]
        # - [9, 11]
        # - [9, 12]
        # - [5, 11]
        # - [5, 12]
        # - [4, 11]
        # - [4, 12]
        # - [10, 11]
        # - [10, 12]

        - [3, 7]
        - [11, 7]
    train_run_action_sequences:
        - [7, 7, 7, 7, 3]    # 7, 12
        # - [7, 7, 7, 7]       # 7, 11
        # - [3, 7, 7, 7, 7, 3] # 7, 13
        - [6, 6, 6, 6, 3]    # 7, 12
        # - [6, 6, 6, 6]       # 7, 11
        # - [3, 6, 6, 6, 6, 3] # 7, 13
        # - [6, 6, 6, 3]       # 8, 11
        # - [3, 6, 6, 6, 3]    # 8, 12
        # - [3, 3, 6, 6, 6, 3] # 8, 13
        # - [7, 7, 7, 3]       # 6, 11
        # - [3, 7, 7, 7, 3]    # 6, 12
        # - [3, 3, 7, 7, 7, 3] # 6, 13
        # - [3, 6, 6, 3]       # 9, 11
        # - [3, 3, 6, 6, 3]    # 9, 12
        # - [3, 7, 7, 3]       # 5, 11
        # - [3, 3, 7, 7, 3]    # 5, 12
        # - [7, 3, 3, 3]       # 4, 11
        # - [7, 3, 3, 3, 3]    # 4, 12
        # - [6, 3, 3, 3]       # 10, 11
        # - [6, 3, 3, 3, 3]    # 10, 12

        - [3, 6, 6, 6, 6, 3] # 3, 7
        - [3, 7, 7, 7, 7, 3] # 11, 7
    train_run_trigger_probabilities: 
        # [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.5, 0.5]
        [0.2, 0.2, 0.0, 0.0]
    learning_rate: 
        schedule: constant

        constant:
            value: 0.1
        
        linear_decay:
            initial_value: 0.1
            final_value: 0.01
            anneal_duration: 250000

        hard_coded:
            values: [0.1, 0.01]
            timestep_changes: [100000]
            
    discount_factor: 0.9
    train_step_cost_factor: 0.01

    one_dim_blocks: True
    imputation_method: random

    update_no_op: True

    gradual_learner_window_average: 1

    epsilon:
        schedule: constant

        constant:
            value: 0.99
        
        linear_decay:
            initial_value: 0.99
            final_value: 0.1
            anneal_duration: 250000

initialisation:
    type: random_normal

    random_uniform:
        lower_bound: 0
        upper_bound: 1

    random_normal:
        mean: 0
        variance: 0.1

train_environment: 

    env_name: escape_env_diagonal
    map_path: ../circular_maps/obstacle_map.txt

    episode_timeout: 500
    representation: agent_position
    start_position:
    reward_positions:
        - [7, 1]

    # provide either one set of attributes (used for all rewards)
    # or one set for each reward
    reward_attributes:
        availability: [1] # integer specifying number available or "infinite"
        statistics:
            - gaussian:
                mean: 1
                variance: 0

    train_hierarchy_network:
        transition_structure_path: ../maps/vector_blocked_hierarchy_transition_7X.json

test_environments:

    env_name: escape_env_diagonal
    map_paths: 
        - ../circular_maps/obstacle_map.txt
        - ../circular_maps/test_map.txt

    num_trials: 3

    episode_timeout: 50
    representation: agent_position
    start_position: [7, 12]
    reward_positions:
        - [7, 1]
    step_cost_factor: 0.01

    # provide either one set of attributes (used for all rewards)
    # or one set for each reward
    reward_attributes:
        availability: [1] # integer specifying number available or "infinite"
        statistics:
            - gaussian:
                mean: 1
                variance: 0

    test_hierarchy_network:
        transition_structure_paths: 
            - ../maps/test_hierarchy_transition_7X.json
            - ../maps/hierarchy_transition_7X.json

logging:
    print_frequency: 30000
    visualisation_frequency: 90000
    rollout_frequency: 900000
    train_test_frequency: 60000
    test_frequency: 60000
    checkpoint_frequency: 60000

    visualisations: 
        # - numbered_value_function
        # - visitation_counts
        # - value_function
